{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"is",
				"is_staff"
			],
			[
				"user",
				"username"
			],
			[
				"pass",
				"password"
			],
			[
				"get_ob",
				"get_object_or_404"
			],
			[
				"RE",
				"RestaurantDetailView"
			],
			[
				"restau",
				"restaurant_listview"
			],
			[
				"auto",
				"auto_now_add"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from django.conf import settings\nfrom django.contrib.auth.models import (\n    BaseUserManager, AbstractBaseUser\n)\nfrom django.core.validators import RegexValidator\nfrom django.db import models\nfrom django.db.models.signals import post_save\n\n# Create your models here.\n\n\n\n\n\nclass MyUserManager(BaseUserManager): #base user manager\n    def create_user(self, username, email, password=None):\n        \"\"\"\n        Creates and saves a User with the given email, date of\n        birth and password.\n        \"\"\"\n        if not email:\n            raise ValueError('Users must have an email address')\n\n        user = self.model(\n        \tusername = username,\n            email=self.normalize_email(email),\n            \n        )\n\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n\n    def create_superuser(self, username, email, password):\n        \"\"\"\n        Creates and saves a superuser with the given email, date of\n        birth and password.\n        \"\"\"\n        user = self.create_user(\n            username,\n            email,\n            password=password,\n        )\n        user.is_admin = True\n        user.is_staff = True\n        user.save(using=self._db)\n        return user\n\n\nUSERNAME_REGEX = '^[a-zA-z0-9.@+-]*$'\n\nclass MyUser(AbstractBaseUser): #user model\n    username = models.CharField(\n\t\t\t\tmax_length=255, \n\t\t\t\tvalidators=[\n                        \tRegexValidator(\n                            \tregex = USERNAME_REGEX,\n                            \tmessage= 'Username must be Alphanumeric or contain any of the following \". @ + -\"',\n                            \tcode = 'invalid_username'                            \t\n                            )],\n                unique=True,\n\t\t    )\n    email = models.EmailField(\n        verbose_name='email address',\n        max_length=255,\n        unique=True,\n    )\n    zipcode \t= models.CharField(max_length=120, default=\"78249\") #after you add a column here, migrate, and then go to admin.py\n    is_active = models.BooleanField(default=True)\n    is_staff = models.BooleanField(default=False)\n    is_admin = models.BooleanField(default=False)\n\n    objects = MyUserManager()\n\n    USERNAME_FIELD = 'username'\n    REQUIRED_FIELDS = ['email']\n\n    def get_full_name(self):\n        # The user is identified by their email address\n        return self.email\n\n    def get_short_name(self):\n        # The user is identified by their email address\n        return self.email\n\n    def __str__(self):              # __unicode__ on Python 2\n        return self.email\n\n    def has_perm(self, perm, obj=None):\n        \"Does the user have a specific permission?\"\n        # Simplest possible answer: Yes, always\n        return True\n\n    def has_module_perms(self, app_label):\n        \"Does the user have permissions to view the app `app_label`?\"\n        # Simplest possible answer: Yes, always\n        return True\n\n    # @property\n    # def is_staff(self):\n    #     \"Is the user a member of staff?\"\n    #     # Simplest possible answer: All admins are staff\n    #     return self.is_admin\n\n#here we've extended the user model, not sure how or why, but we have.\nclass Profile(models.Model):\n\tuser \t\t= models.OneToOneField(settings.AUTH_USER_MODEL)\n\tfirst_nm \t= models.CharField(max_length=120,null=True,blank=True)\n\tlast_nm\t\t= models.CharField(max_length=120,null=True,blank=True) \n\n\tdef __str__(self):\n\t\treturn str(self.user.username)\n\n\tdef __unicode__(self):\n\t\treturn str(self.user.username)\n\n#this only creates a new profile when we create a new user\ndef post_save_user_model_receiver(sender, instance, created, *args, **kwargs):\n\tif created:\n\t\ttry:\n\t\t\tProfile.objects.create(user=instance)\n\t\texcept:\n\t\t\tpass\n\n\npost_save.connect(post_save_user_model_receiver, sender=settings.AUTH_USER_MODEL)\n\t\n",
			"file": "src/profiles/models.py",
			"file_size": 3823,
			"file_write_time": 131619344945787819,
			"settings":
			{
				"buffer_size": 3768,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/profiles/forms.py",
			"settings":
			{
				"buffer_size": 1965,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/profiles/views.py",
			"settings":
			{
				"buffer_size": 2049,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/templates/registration/register.html",
			"settings":
			{
				"buffer_size": 111,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/operationBlueSilver/urls.py",
			"settings":
			{
				"buffer_size": 1254,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/templates/registration/form.html",
			"settings":
			{
				"buffer_size": 110,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/profiles/admin.py",
			"settings":
			{
				"buffer_size": 1660,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/operationBlueSilver/settings/base.py",
			"settings":
			{
				"buffer_size": 3242,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Starlord/Dev/project",
		"/C/Users/Starlord/Dev/project/src",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/__pycache__",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/settings",
		"/C/Users/Starlord/Dev/project/src/profiles",
		"/C/Users/Starlord/Dev/project/src/profiles/migrations",
		"/C/Users/Starlord/Dev/project/src/templates",
		"/C/Users/Starlord/Dev/project/src/templates/registration"
	],
	"file_history":
	[
		"/C/Users/Starlord/Dev/project/src/profiles/views.py",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/urls.py",
		"/C/Users/Starlord/Dev/project/src/templates/base.html",
		"/C/Users/Starlord/Dev/project/src/templates/snippets/nav.html",
		"/C/Users/Starlord/Dev/project/src/templates/snippets/sidebar.html",
		"/C/Users/Starlord/Dev/project/src/templates/about.html",
		"/C/Users/Starlord/Dev/project/src/templates/snippets/css.html",
		"/C/Users/Starlord/Dev/project/src/templates/snippets/nav_old.html",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/settings/__init__.py",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/settings/base.py",
		"/C/Users/Starlord/Dev/project/src/templates/home.html",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/settings.py",
		"/C/Users/Starlord/Dev/project/src/templates/contact.html",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/old_settings.py",
		"/C/Users/Starlord/Dev/project/src/templates/base.hml",
		"/C/Users/Starlord/Dev/project/src/profiles/admin.py",
		"/C/Users/Starlord/Dev/project/src/profiles/models.py",
		"/C/Users/Starlord/Dev/project/src/templates/index.html",
		"/C/Users/Starlord/Dev/project/src/profiles/urls.py",
		"/C/Users/Starlord/Dev/project/src/profiles/forms.py",
		"/C/Users/Starlord/Dev/project/src/templates/snippets/js.html",
		"/C/Users/Starlord/Dev/project/src/profiles/utils.py",
		"/C/Users/Starlord/Dev/project/src/templates/registration/login.html",
		"/C/Users/Starlord/Dev/project/.gitignore",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/settings/local.py",
		"/C/Users/Starlord/Dev/project/src/operationBlueSilver/settings/production.py",
		"/C/Users/Starlord/Dev/project/src/project1/settings/production.py",
		"/C/Users/Starlord/Dev/project/src/project1/settings/__init__.py",
		"/C/Users/Starlord/Dev/project/src/project1/settings/base.py",
		"/C/Users/Starlord/Dev/project/src/project1/old_settings.py",
		"/C/Users/Starlord/Dev/Try-Django-1.11/src/muypicky/settings/base.py",
		"/C/Users/Starlord/Dev/Try-Django-1.11/src/muypicky/settings/__init__.py",
		"/C/Users/Starlord/Dev/Try-Django-1.11/src/menus2/models.py",
		"/C/Users/Starlord/Dev/project/src/project1/settings/local.py",
		"/C/Users/Starlord/Documents/__init__.py",
		"/C/Users/Starlord/Dev/project/src/restaurants/templates/restaurants/restaurant_list.html",
		"/C/Users/Starlord/Dev/project/src/restaurants/templates/restaurants/restaurants_list.html",
		"/C/Users/Starlord/Dev/project/src/restaurants/templates/restaurants/restaurantslocation_list.html",
		"/C/Users/Starlord/Dev/project/src/templates/snippets/jss.html",
		"/C/Users/Starlord/Dev/project/src/myproject/settings/base.py",
		"/C/Users/Starlord/Dev/project/src/myproject/old_settings.py",
		"/C/Users/Starlord/Dev/project/src/myproject/settings/__init__.py",
		"/C/Users/Starlord/Dev/project/src/myproject/__init__.py",
		"/C/Users/Starlord/Dev/project/src/myproject/settings/production.py",
		"/C/Users/Starlord/Documents/graph/base.html",
		"/C/Users/Starlord/Dev/project/src/myproject/settings/local.py",
		"/C/Users/Starlord/Dev/project/src/myproject/urls.py",
		"/C/Users/Starlord/Dev/project/src/templates"
	],
	"find":
	{
		"height": 52.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"date_of",
			"staff"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/profiles/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3768,
						"regions":
						{
						},
						"selection":
						[
							[
								3131,
								3131
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/profiles/forms.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1965,
						"regions":
						{
						},
						"selection":
						[
							[
								1051,
								1051
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/profiles/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2049,
						"regions":
						{
						},
						"selection":
						[
							[
								608,
								608
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/templates/registration/register.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 111,
						"regions":
						{
						},
						"selection":
						[
							[
								111,
								111
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/operationBlueSilver/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1254,
						"regions":
						{
						},
						"selection":
						[
							[
								1102,
								1110
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/templates/registration/form.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110,
						"regions":
						{
						},
						"selection":
						[
							[
								110,
								110
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/profiles/admin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1660,
						"regions":
						{
						},
						"selection":
						[
							[
								945,
								945
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/operationBlueSilver/settings/base.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3242,
						"regions":
						{
						},
						"selection":
						[
							[
								1115,
								1115
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 420.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 48.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "project2.sublime-project",
	"replace":
	{
		"height": 55.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 499.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
